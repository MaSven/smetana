public static Agdatadict_s agmakedatadict(Agraph_s g) {
    Agraph_s par;
    Agdatadict_s parent_dd, dd;
    dd = (Agdatadict_s) agbindrec(g, DataDictName, sizeof(Agdatadict_s.class),
				    false).castTo(Agdatadict_s.class);
    dd.setPtr("dict.n", agdtopen(g, AgDataDictDisc, Dttree));
    dd.setPtr("dict.e", agdtopen(g, AgDataDictDisc, Dttree));
    dd.setPtr("dict.g", agdtopen(g, AgDataDictDisc, Dttree));
    if ((par = agparent(g))!=null) {
	parent_dd = agdatadict(par, false);
	dtview((_dt_s)dd.getPtr("dict.n"), (_dt_s)parent_dd.getPtr("dict.n"));
	dtview((_dt_s)dd.getPtr("dict.e"), (_dt_s)parent_dd.getPtr("dict.e"));
	dtview((_dt_s)dd.getPtr("dict.g"), (_dt_s)parent_dd.getPtr("dict.g"));
    } else {
	if (ProtoGraph!=null && NEQ(g, ProtoGraph)) {
	    /* it's not ok to dtview here for several reasons. the proto
	       graph could change, and the sym indices don't match */
	    parent_dd = agdatadict(ProtoGraph, false);
	    agcopydict(parent_dd.getPtr("dict.n"), dd.getPtr("dict.n"), g, 1);
	    agcopydict(parent_dd.getPtr("dict.e"), dd.getPtr("dict.e"), g, 2);
	    agcopydict(parent_dd.getPtr("dict.g"), dd.getPtr("dict.g"), g, 0);
	}
    }
    return dd;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static Agdatadict_t *agmakedatadict(Agraph_t * g)
{
    Agraph_t *par;
    Agdatadict_t *parent_dd, *dd;
    dd = (Agdatadict_t *) agbindrec(g, DataDictName, sizeof(Agdatadict_t),
				    (0));
    dd->dict.n = agdtopen(g, &AgDataDictDisc, Dttree);
    dd->dict.e = agdtopen(g, &AgDataDictDisc, Dttree);
    dd->dict.g = agdtopen(g, &AgDataDictDisc, Dttree);
    if ((par = agparent(g))) {
	parent_dd = agdatadict(par, (0));
	;
	dtview(dd->dict.n, parent_dd->dict.n);
	dtview(dd->dict.e, parent_dd->dict.e);
	dtview(dd->dict.g, parent_dd->dict.g);
    } else {
	if (ProtoGraph && (g != ProtoGraph)) {
	    /* it's not ok to dtview here for several reasons. the proto
	       graph could change, and the sym indices don't match */
	    parent_dd = agdatadict(ProtoGraph, (0));
	    agcopydict(parent_dd->dict.n, dd->dict.n, g, 1);
	    agcopydict(parent_dd->dict.e, dd->dict.e, g, 2);
	    agcopydict(parent_dd->dict.g, dd->dict.g, g, 0);
	}
    }
    return dd;
}

