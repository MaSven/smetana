public static void clip_and_install(Agedge_s fe, Agnode_s hn, __ptr__ ps, int pn, __ptr__ info) {
    final __struct__<pointf> p2 = __struct__.from(pointf.class);
    bezier newspl;
    Agnode_s tn;
    int start, end, i, clipTail=0, clipHead=0;
    Agraph_s g;
    Agedge_s orig;
    boxf tbox=null, hbox=null;
    final __struct__<inside_t> inside_context = __struct__.from(inside_t.class);
    tn = agtail(fe);
    g = agraphof(tn);
    newspl = new_spline(fe, pn);
    for (orig = fe; ED_edge_type(orig) != 0; orig = ED_to_orig(orig));
    /* may be a reversed flat edge */
    if (N(info.getBoolean("ignoreSwap")) && (ND_rank(tn) == ND_rank(hn)) && (ND_order(tn) > ND_order(hn))) {
UNSUPPORTED("65xicmirciyw0gw730ccs8jmj"); // 	node_t *tmp;
UNSUPPORTED("c3kh6s8fmv0y5nmh7a8ra0vjl"); // 	tmp = hn;
UNSUPPORTED("48krk9qra5nhqezsw5jka9dl4"); // 	hn = tn;
UNSUPPORTED("4jl5028eiwqrnkrhwhsxk8hk7"); // 	tn = tmp;
    }
    if (EQ(tn, agtail(orig))) {
	clipTail = ED_tail_port(orig).getInt("clip");
	clipHead = ED_head_port(orig).getInt("clip");
	tbox = (boxf) ED_tail_port(orig).getPtr("bp");
	hbox = (boxf) ED_head_port(orig).getPtr("bp");
    }
    else { /* fe and orig are reversed */
UNSUPPORTED("4u3p5rc8z1yksdt6zfy4n8bdc"); // 	clipTail = ED_head_port(orig).clip;
UNSUPPORTED("2ktqbtan79l0vcfvh2un805pn"); // 	clipHead = ED_tail_port(orig).clip;
UNSUPPORTED("6698nlf4nkouwwv8xl3ew7pdl"); // 	hbox = ED_tail_port(orig).bp;
UNSUPPORTED("aozvdkpsy0slwktlcywflyrwo"); // 	tbox = ED_head_port(orig).bp;
    }
    /* spline may be interior to node */
    if(clipHead!=0 && ND_shape(hn)!=null && ND_shape(hn).getPtr("fns").getPtr("insidefn")!=null) {
	inside_context.setPtr("s.n", hn);
	inside_context.setPtr("s.bp", hbox);
	for (start = 0; start < pn - 4; start += 3) {
	    p2.setDouble("x", ps.plus(start + 3).getDouble("x") - ND_coord(tn).getDouble("x"));
	    p2.setDouble("y", ps.plus(start + 3).getDouble("y") - ND_coord(tn).getDouble("y"));
	    if (((Integer)ND_shape(tn).getPtr("fns").call("insidefn", inside_context.amp(), p2)) == 0)
		break;
	}
	shape_clip0(inside_context.amp(), tn, ps.plus(start), NOT(false));
    } else
	start = 0;
    if(clipHead!=0 && ND_shape(hn)!=null && ND_shape(hn).getPtr("fns").getPtr("insidefn")!=null) {
	inside_context.setPtr("s.n", tn);
	inside_context.setPtr("s.bp", tbox);
	for (start = 0; start < pn - 4; start += 3) {
	    p2.setDouble("x", ps.plus(start + 3).getDouble("x") - ND_coord(tn).getDouble("x"));
	    p2.setDouble("y", ps.plus(start + 3).getDouble("y") - ND_coord(tn).getDouble("y"));
	    if (((Integer)ND_shape(tn).getPtr("fns").call("insidefn", inside_context.amp(), p2)) == 0)
		break;
	}
	shape_clip0(inside_context.amp(), tn, ps.plus(start), NOT(false));
    } else
	end = pn - 4;
    for (; start < pn - 4; start += 3) 
	if (! (((SQR((((ps[start])).x -((ps[start + 3])).x)) + SQR((((ps[start])).y -((ps[start + 3])).y)))) < SQR(.001)))
	    break;
UNSUPPORTED("7so7z58dn0zbnsnxhbjs62hn7"); //     for (; end > 0; end -= 3)
UNSUPPORTED("1m1qed4h965lurq3i2jb83e0i"); // 	if (! (((SQR((((ps[end])).x -((ps[end + 3])).x)) + SQR((((ps[end])).y -((ps[end + 3])).y)))) < SQR(.001)))
UNSUPPORTED("ai3czg6gaaxspsmndknpyvuiu"); // 	    break;
UNSUPPORTED("bku33g9fymsmockgaq4jgb7lz"); //    arrow_clip(fe, hn, ps, &start, &end, newspl, info);
UNSUPPORTED("cdqslgeiuxn9l4y2ga9ntw15p"); //     for (i = start; i < end + 4; ) {
UNSUPPORTED("8bm9ob42p0507pci1ulx63p53"); // 	pointf cp[4];
UNSUPPORTED("3jdcntkjqkwun8kl74r0ba7pm"); // 	newspl->list[i - start] = ps[i];
UNSUPPORTED("ubgmsofp9hhgpv4mruablpy2"); // 	cp[0] = ps[i];
UNSUPPORTED("chd2f5z6rt19lbaye25ej7q6j"); // 	i++;
UNSUPPORTED("85lbsie4if0afxegwlr466eh9"); // 	if ( i >= end + 4)
UNSUPPORTED("ai3czg6gaaxspsmndknpyvuiu"); // 	    break;
UNSUPPORTED("3jdcntkjqkwun8kl74r0ba7pm"); // 	newspl->list[i - start] = ps[i];
UNSUPPORTED("7sdhue12r2r83qrb6qcjqc4jp"); // 	cp[1] = ps[i];
UNSUPPORTED("chd2f5z6rt19lbaye25ej7q6j"); // 	i++;
UNSUPPORTED("3jdcntkjqkwun8kl74r0ba7pm"); // 	newspl->list[i - start] = ps[i];
UNSUPPORTED("asl9pvv3v1gagmth4pfljhug2"); // 	cp[2] = ps[i];
UNSUPPORTED("chd2f5z6rt19lbaye25ej7q6j"); // 	i++;
UNSUPPORTED("4nzqqspi0jfu75wmp76gcbrmu"); // 	cp[3] = ps[i];
UNSUPPORTED("5odj9pd5yk5sxp5ix1si7bcbe"); // 	update_bb_bz(&GD_bb(g), cp);
UNSUPPORTED("dvgyxsnyeqqnyzq696k3vskib"); //     }
UNSUPPORTED("2b4p5onviz6j8gah2tnmf5pxl"); //     newspl->size = end - start + 4;
UNSUPPORTED("c24nfmv9i7o5eoqaymbibp7m7"); // }

throw new UnsupportedOperationException();
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
void
clip_and_install(edge_t * fe, node_t * hn, pointf * ps, int pn,
		 splineInfo * info)
{
    pointf p2;
    bezier *newspl;
    node_t *tn;
    int start, end, i, clipTail, clipHead;
    graph_t *g;
    edge_t *orig;
    boxf *tbox, *hbox;
    inside_t inside_context;
    tn = agtail(fe);
    g = agraphof(tn);
    newspl = new_spline(fe, pn);
    for (orig = fe; ED_edge_type(orig) != 0; orig = ED_to_orig(orig));
    /* may be a reversed flat edge */
    if (!info->ignoreSwap && (ND_rank(tn) == ND_rank(hn)) && (ND_order(tn) > ND_order(hn))) {
	node_t *tmp;
	tmp = hn;
	hn = tn;
	tn = tmp;
    }
    if (tn == agtail(orig)) {
	clipTail = ED_tail_port(orig).clip;
	clipHead = ED_head_port(orig).clip;
	tbox = ED_tail_port(orig).bp;
	hbox = ED_head_port(orig).bp;
    }
    else { /* fe and orig are reversed */
	clipTail = ED_head_port(orig).clip;
	clipHead = ED_tail_port(orig).clip;
	hbox = ED_tail_port(orig).bp;
	tbox = ED_head_port(orig).bp;
    }
    /* spline may be interior to node */
    if(clipTail && ND_shape(tn) && ND_shape(tn)->fns->insidefn) {
	inside_context.s.n = tn;
	inside_context.s.bp = tbox;
	for (start = 0; start < pn - 4; start += 3) {
	    p2.x = ps[start + 3].x - ND_coord(tn).x;
	    p2.y = ps[start + 3].y - ND_coord(tn).y;
	    if (ND_shape(tn)->fns->insidefn(&inside_context, p2) == 0)
		break;
	}
	shape_clip0(&inside_context, tn, &ps[start], NOT(0));
    } else
	start = 0;
    if(clipHead && ND_shape(hn) && ND_shape(hn)->fns->insidefn) {
	inside_context.s.n = hn;
	inside_context.s.bp = hbox;
	for (end = pn - 4; end > 0; end -= 3) {
	    p2.x = ps[end].x - ND_coord(hn).x;
	    p2.y = ps[end].y - ND_coord(hn).y;
	    if (ND_shape(hn)->fns->insidefn(&inside_context, p2) == 0)
		break;
	}
	shape_clip0(&inside_context, hn, &ps[end], 0);
    } else
	end = pn - 4;
    for (; start < pn - 4; start += 3) 
	if (! (((SQR((((ps[start])).x -((ps[start + 3])).x)) + SQR((((ps[start])).y -((ps[start + 3])).y)))) < SQR(.001)))
	    break;
    for (; end > 0; end -= 3)
	if (! (((SQR((((ps[end])).x -((ps[end + 3])).x)) + SQR((((ps[end])).y -((ps[end + 3])).y)))) < SQR(.001)))
	    break;
   arrow_clip(fe, hn, ps, &start, &end, newspl, info);
    for (i = start; i < end + 4; ) {
	pointf cp[4];
	newspl->list[i - start] = ps[i];
	cp[0] = ps[i];
	i++;
	if ( i >= end + 4)
	    break;
	newspl->list[i - start] = ps[i];
	cp[1] = ps[i];
	i++;
	newspl->list[i - start] = ps[i];
	cp[2] = ps[i];
	i++;
	cp[3] = ps[i];
	update_bb_bz(&GD_bb(g), cp);
    }
    newspl->size = end - start + 4;
}

