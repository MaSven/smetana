public static int dtsize_(_dt_s dt) {
	_dtlink_s	t;
	int		size;
	if (((dt.getPtr("data").getInt("type")&010000)!=0)) dtrestore(dt,null);
	if(dt.getPtr("data").getInt("size") < 0) /* !(dt->data->type&(DT_SET|DT_BAG)) */
	{	if((dt.getPtr("data").getInt("type")&(0000004|0000010))!=0)
			dt.getPtr("data").setInt("size", treecount((_dtlink_s) dt.getPtr("data").getPtr("here")));
		else if((dt.getPtr("data").getInt("type")&(0000020|0000040|0000100))!=0)
		{	size=0;
		    for(t = (_dtlink_s) dt.getPtr("data").getPtr("hh").getPtr("_head"); t!=null; t = (_dtlink_s) t.getPtr("right"))
				size += 1;
			dt.getPtr("data").setInt("size", size);
		}
	}
	return dt.getPtr("data").getInt("size");

}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
int dtsize(Dt_t* dt)
{
	register Dtlink_t*	t;
	register int		size;
	((dt->data->type&010000) ? dtrestore(dt,((Dtlink_t*)0)) : 0);
	if(dt->data->size < 0) /* !(dt->data->type&(DT_SET|DT_BAG)) */
	{	if(dt->data->type&(0000004|0000010))
			dt->data->size = treecount(dt->data->here);
		else if(dt->data->type&(0000020|0000040|0000100))
		{	for(size = 0, t = dt->data->hh._head; t; t = t->right)
				size += 1;
			dt->data->size = size;
		}
	}
	return dt->data->size;
}

