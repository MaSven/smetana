public static void make_leafslots(Agraph_s g) {
    int i, j, r;
    Agnode_s v;
    for (r = GD_minrank(g); r <= GD_maxrank(g); r++) {
	j = 0;
	for (i = 0; i < GD_rank(g).plus(r).getInt("n"); i++) {
	    v = (Agnode_s) GD_rank(g).plus(r).getArrayOfPtr("v").plus(i).getPtr();
	    ND_order(v, j);
	    if (ND_ranktype(v) == 6)
		j = j + ND_UF_size(v);
	    else
		j++;
	}
	if (j <= GD_rank(g).plus(r).getInt("n"))
	    continue;
	GD_rank(g).plus(r).setPtr("v", ALLOC_empty(j + 1, GD_rank(g).plus(r).getPtr("v"), Agnode_s.class));
	for (i = GD_rank(g).plus(r).getInt("n") - 1; i >= 0; i--) {
	    v = (Agnode_s) GD_rank(g).plus(r).getArrayOfPtr("v").plus(i).getPtr();
	    GD_rank(g).plus(r).getArrayOfPtr("v").plus(ND_order(v)).setPtr(v);
	}
	GD_rank(g).plus(r).setInt("n", j);
	GD_rank(g).plus(r).getArrayOfPtr("v").plus(j).setPtr(null);
    }
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void make_leafslots(graph_t * g)
{
    int i, j, r;
    node_t *v;
    for (r = GD_minrank(g); r <= GD_maxrank(g); r++) {
	j = 0;
	for (i = 0; i < GD_rank(g)[r].n; i++) {
	    v = GD_rank(g)[r].v[i];
	    ND_order(v) = j;
	    if (ND_ranktype(v) == 6)
		j = j + ND_UF_size(v);
	    else
		j++;
	}
	if (j <= GD_rank(g)[r].n)
	    continue;
	GD_rank(g)[r].v = ALLOC(j + 1, GD_rank(g)[r].v, node_t *);
	for (i = GD_rank(g)[r].n - 1; i >= 0; i--) {
	    v = GD_rank(g)[r].v[i];
	    GD_rank(g)[r].v[ND_order(v)] = v;
	}
	GD_rank(g)[r].n = j;
	GD_rank(g)[r].v[j] = NULL;
    }
}

