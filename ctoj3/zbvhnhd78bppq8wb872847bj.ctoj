public static void dot_init_edge(Agedge_s e) {
    CString tailgroup, headgroup;
    agbindrec(e, new CString("Agedgeinfo_t"), sizeof(Agedgeinfo_t.class), (N(0)));	//graph custom data
    common_init_edge(e);
    ED_weight(e, late_int(e, E_weight, 1, 0));
    tailgroup = late_string(agtail(e), N_group, new CString(""));
    headgroup = late_string(aghead(e), N_group, new CString(""));
    ED_count(e, 1);
    ED_xpenalty(e, 1);
    if (tailgroup.charAt(0)!='\0' && (tailgroup.isSame(headgroup))) {
UNSUPPORTED("atjraranegsdjegclykesn5gx"); // 	(((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->xpenalty) = 1000;
UNSUPPORTED("5y0yunmvmngg67c9exlbn6jbk"); // 	(((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->weight) *= 100;
    }
    if (nonconstraint_edge(e)) {
UNSUPPORTED("54niz21n2omf1i9v67brdid9w"); // 	(((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->xpenalty) = 0;
UNSUPPORTED("2v5u5jdguhhn7vjihniotrml0"); // 	(((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->weight) = 0;
    }
    ED_showboxes(e, late_int(e, E_showboxes, 0, 0));
    ED_minlen(e, late_int(e, E_minlen, 1, 0));
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void 
dot_init_edge(edge_t * e)
{
    char *tailgroup, *headgroup;
    agbindrec(e, "Agedgeinfo_t", sizeof(Agedgeinfo_t), NOT(0));	//graph custom data
    common_init_edge(e);
    ED_weight(e) = late_int(e, E_weight, 1, 0);
    tailgroup = late_string(agtail(e), N_group, "");
    headgroup = late_string(aghead(e), N_group, "");
    ED_count(e) = ED_xpenalty(e) = 1;
    if (tailgroup[0] && (tailgroup == headgroup)) {
	ED_xpenalty(e) = 1000;
	ED_weight(e) *= 100;
    }
    if (nonconstraint_edge(e)) {
	ED_xpenalty(e) = 0;
	ED_weight(e) = 0;
    }
    ED_showboxes(e) = late_int(e, E_showboxes, 0, 0);
    ED_minlen(e) = late_int(e, E_minlen, 1, 0);
}

