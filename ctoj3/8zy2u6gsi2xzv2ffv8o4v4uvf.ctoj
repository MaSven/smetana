public static Agedge_s agnxtedge(Agraph_s g, Agedge_s e, Agnode_s n) {
    Agedge_s rv;
    if (AGTYPE(e) == AGOUTEDGE) {
	rv = agnxtout(g, e);
	if (rv == null) {
	    do {
		rv = N(rv) ? agfstin(g, n) : agnxtin(g,rv);
	    } while (rv!=null && EQ(rv.getPtr("node"), n));
	}
    } else {
	do {
	    rv = agnxtin(g, e);		/* so that we only see each edge once, */
		e = rv;
	} while (rv!=null && EQ(rv.getPtr("node"), n));	/* ignore loops as in-edges */
    }
    return rv;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Agedge_t *agnxtedge(Agraph_t * g, Agedge_t * e, Agnode_t * n)
{
    Agedge_t *rv;
    if (AGTYPE(e) == AGOUTEDGE) {
	rv = agnxtout(g, e);
	if (rv == ((Agedge_t*)0)) {
	    do {
		rv = !rv ? agfstin(g, n) : agnxtin(g,rv);
	    } while (rv && (rv->node == n));
	}
    } else {
	do {
	    rv = agnxtin(g, e);		/* so that we only see each edge once, */
		e = rv;
	} while (rv && (rv->node == n));	/* ignore loops as in-edges */
    }
    return rv;
}

