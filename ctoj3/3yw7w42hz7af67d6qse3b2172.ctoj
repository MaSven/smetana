public static void scan_and_normalize() {
    Agnode_s n;
    Z._().Minrank = Integer.MAX_VALUE;
    Z._().Maxrank = -Integer.MAX_VALUE;
    for (n = GD_nlist(Z._().G_ns); n!=null; n = ND_next(n)) {
	if (ND_node_type(n) == 0) {
	    Z._().Minrank = MIN(Z._().Minrank, ND_rank(n));
	    Z._().Maxrank = MAX(Z._().Maxrank, ND_rank(n));
	}
    }
    if (Z._().Minrank != 0) {
	for (n = GD_nlist(Z._().G_ns); n!=null; n = ND_next(n))
	    ND_rank(n, ND_rank(n) - Z._().Minrank);
	Z._().Maxrank -= Z._().Minrank;
	Z._().Minrank = 0;
    }
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void scan_and_normalize(void)
{
    node_t *n;
    Minrank = INT_MAX;
    Maxrank = -INT_MAX;
    for (n = GD_nlist(G); n; n = ND_next(n)) {
	if (ND_node_type(n) == 0) {
	    Minrank = MIN(Minrank, ND_rank(n));
	    Maxrank = MAX(Maxrank, ND_rank(n));
	}
    }
    if (Minrank != 0) {
	for (n = GD_nlist(G); n; n = ND_next(n))
	    ND_rank(n) -= Minrank;
	Maxrank -= Minrank;
	Minrank = 0;
    }
}

