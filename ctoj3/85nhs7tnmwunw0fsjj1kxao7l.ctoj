public static void merge_ranks(Agraph_s subg) {
    int i, d, r, pos, ipos;
    Agnode_s v;
    Agraph_s root;
    root = dot_root(subg);
    if (GD_minrank(subg) > 0)
UNSUPPORTED("6joeb28tqhza9srpo118g386i"); // 	GD_rank(root)[GD_minrank(subg) - 1].valid = 0;
    for (r = GD_minrank(subg); r <= GD_maxrank(subg); r++) {
	d = GD_rank(subg).plus(r).getPtr().getInt("n");
	ipos = pos = ND_order(GD_rankleader(subg).plus(r).getPtr());
	make_slots(root, r, pos, d);
	for (i = 0; i < GD_rank(subg).plus(r).getPtr().getInt("n"); i++) {
	    v = (Agnode_s) GD_rank(subg).plus(r).getArrayOfPtr("v").plus(i).getPtr();
	    GD_rank(root).plus(r).getArrayOfPtr("v").plus(pos).setPtr(v);
	    ND_order(v, pos++);
	/* real nodes automatically have v->root = root graph */
	    if (ND_node_type(v) == 1)
		v.setPtr("root", agroot(root));
	    delete_fast_node(subg, v);
	    fast_node(root, v);
	    GD_n_nodes(root, GD_n_nodes(root)+1);
	}
	GD_rank(subg).plus(r).getPtr().setPtr("v", GD_rank(root).plus(r).getPtr().getPtr("v").plus(ipos));
	GD_rank(root).plus(r).getPtr().setInt("valid", 0);
    }
    if (r < GD_maxrank(root))
	GD_rank(root).plus(r).getPtr().setInt("valid", 0);
    GD_expanded(subg, NOT(false));
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void 
merge_ranks(graph_t * subg)
{
    int i, d, r, pos, ipos;
    node_t *v;
    graph_t *root;
    root = dot_root(subg);
    if (GD_minrank(subg) > 0)
	GD_rank(root)[GD_minrank(subg) - 1].valid = 0;
    for (r = GD_minrank(subg); r <= GD_maxrank(subg); r++) {
	d = GD_rank(subg)[r].n;
	ipos = pos = ND_order(GD_rankleader(subg)[r]);
	make_slots(root, r, pos, d);
	for (i = 0; i < GD_rank(subg)[r].n; i++) {
	    v = GD_rank(root)[r].v[pos] = GD_rank(subg)[r].v[i];
	    ND_order(v) = pos++;
	/* real nodes automatically have v->root = root graph */
	    if (ND_node_type(v) == 1)
		v->root = agroot(root);
	    delete_fast_node(subg, v);
	    fast_node(root, v);
	    GD_n_nodes(root)++;
	}
	GD_rank(subg)[r].v = GD_rank(root)[r].v + ipos;
	GD_rank(root)[r].valid = 0;
    }
    if (r < GD_maxrank(root))
	GD_rank(root)[r].valid = 0;
    GD_expanded(subg) = NOT(0);
}

