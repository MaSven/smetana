public static void flat_node(Agedge_s e) {
    int r, place, ypos, h2;
    Agraph_s g;
    Agnode_s n, vn;
    Agedge_s ve;
    final __struct__<pointf> dimen = __struct__.from(pointf.class);
    if (ED_label(e) == null)
	return;
    g = dot_root(agtail(e));
    r = ND_rank(agtail(e));
    place = flat_limits(g, e);
    /* grab ypos = LL.y of label box before make_vn_slot() */
    if ((n = (Agnode_s) GD_rank(g).plus(r - 1).getArrayOfPtr("v").plus(0).getPtr())!=null)
	ypos = (int)(ND_coord(n).getDouble("y") - GD_rank(g).plus(r - 1).getDouble("ht1"));
    else {
	n = (Agnode_s) GD_rank(g).plus(r).getArrayOfPtr("v").plus(0).getPtr();
	ypos = (int)(ND_coord(n).getDouble("y") + GD_rank(g).plus(r).getDouble("ht2") + GD_ranksep(g));
    }
    vn = make_vn_slot(g, r - 1, place);
    dimen.____(ED_label(e).getStruct("dimen"));
    if (GD_flip(g)!=0) {
	double f = dimen.getDouble("x");
	dimen.setDouble("x", dimen.getDouble("y"));
	dimen.setDouble("y", f);
    }
    ND_ht(vn, dimen.getDouble("y"));
    h2 = (int)(ND_ht(vn) / 2);
    ND_rw(vn, dimen.getDouble("x") / 2);
    ND_lw(vn, ND_rw(vn));
    ND_label(vn, ED_label(e));
    ND_coord(vn).setDouble("y", ypos + h2);
    ve = virtual_edge(vn, agtail(e), e);	/* was NULL? */
    ED_tail_port(ve).getStruct("p").setDouble("x", -ND_lw(vn));
    ED_head_port(ve).getStruct("p").setDouble("x", ND_rw(agtail(e)));
    ED_edge_type(ve, 4);
    ve = virtual_edge(vn, aghead(e), e);
    ED_tail_port(ve).getStruct("p").setDouble("x", ND_rw(vn));
    ED_head_port(ve).getStruct("p").setDouble("x", ND_lw(aghead(e)));
    ED_edge_type(ve, 4);
    /* another assumed symmetry of ht1/ht2 of a label node */
    if (GD_rank(g).plus(r - 1).getDouble("ht1") < h2)
	GD_rank(g).plus(r - 1).setDouble("ht1", h2);
    if (GD_rank(g).plus(r - 1).getDouble("ht2") < h2)
	GD_rank(g).plus(r - 1).setDouble("ht2", h2);
    ND_alg(vn, e);
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void 
flat_node(edge_t * e)
{
    int r, place, ypos, h2;
    graph_t *g;
    node_t *n, *vn;
    edge_t *ve;
    pointf dimen;
    if (ED_label(e) == NULL)
	return;
    g = dot_root(agtail(e));
    r = ND_rank(agtail(e));
    place = flat_limits(g, e);
    /* grab ypos = LL.y of label box before make_vn_slot() */
    if ((n = GD_rank(g)[r - 1].v[0]))
	ypos = ND_coord(n).y - GD_rank(g)[r - 1].ht1;
    else {
	n = GD_rank(g)[r].v[0];
	ypos = ND_coord(n).y + GD_rank(g)[r].ht2 + GD_ranksep(g);
    }
    vn = make_vn_slot(g, r - 1, place);
    dimen = ED_label(e)->dimen;
    if (GD_flip(g)) {
	double f = dimen.x;
	dimen.x = dimen.y;
	dimen.y = f;
    }
    ND_ht(vn) = dimen.y;
    h2 = ND_ht(vn) / 2;
    ND_lw(vn) = ND_rw(vn) = dimen.x / 2;
    ND_label(vn) = ED_label(e);
    ND_coord(vn).y = ypos + h2;
    ve = virtual_edge(vn, agtail(e), e);	/* was NULL? */
    ED_tail_port(ve).p.x = -ND_lw(vn);
    ED_head_port(ve).p.x = ND_rw(agtail(e));
    ED_edge_type(ve) = 4;
    ve = virtual_edge(vn, aghead(e), e);
    ED_tail_port(ve).p.x = ND_rw(vn);
    ED_head_port(ve).p.x = ND_lw(aghead(e));
    ED_edge_type(ve) = 4;
    /* another assumed symmetry of ht1/ht2 of a label node */
    if (GD_rank(g)[r - 1].ht1 < h2)
	GD_rank(g)[r - 1].ht1 = h2;
    if (GD_rank(g)[r - 1].ht2 < h2)
	GD_rank(g)[r - 1].ht2 = h2;
    ND_alg(vn) = e;
}

