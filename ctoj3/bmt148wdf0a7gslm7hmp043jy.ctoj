public static shape_desc bind_shape(CString name, Agnode_s np) {
    shape_desc rv = null;
    CString str;
    str = safefile(agget(np, new CString("shapefile")));
    /* If shapefile is defined and not epsf, set shape = custom */
    if (str!=null && UNSUPPORTED("!(*(name)==*(\"epsf\")&&!strcmp(name,\"epsf\"))")!=null)
	name = new CString("custom");
    if (N(name.charAt(0)=='c' && N(strcmp(name,new CString("custom"))))) {
	for (shape_desc ptr : Z._().Shapes) {
	    if ((N(strcmp(ptr.getCString("name"),name)))) {
		rv = ptr;
		break;
	    }
	}
    }
    if (rv == null)
UNSUPPORTED("7funuix8h6nhe6fqrjsec3kvk"); // 	rv = user_shape(name);
    return rv;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
shape_desc *bind_shape(char *name, node_t * np)
{
    shape_desc *ptr, *rv = NULL;
    const char *str;
    str = safefile(agget(np, "shapefile"));
    /* If shapefile is defined and not epsf, set shape = custom */
    if (str && !(*(name)==*("epsf")&&!strcmp(name,"epsf")))
	name = "custom";
    if (!(*(name)==*("custom")&&!strcmp(name,"custom"))) {
	for (ptr = Shapes; ptr->name; ptr++) {
	    if ((*(ptr->name)==*(name)&&!strcmp(ptr->name,name))) {
		rv = ptr;
		break;
	    }
	}
    }
    if (rv == NULL)
	rv = user_shape(name);
    return rv;
}

