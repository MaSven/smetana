public static void checkFlatAdjacent(Agedge_s e) {
    Agnode_s tn = agtail(e);
    Agnode_s hn = aghead(e);
    int i, lo, hi;
    Agnode_s n;
    __ptr__ rank;
    if (ND_order(tn) < ND_order(hn)) {
	lo = ND_order(tn);
	hi = ND_order(hn);
    }
    else {
	lo = ND_order(hn);
	hi = ND_order(tn);
    }
    rank = GD_rank(dot_root(tn)).plus(ND_rank(tn));
    for (i = lo + 1; i < hi; i++) {
	n = (Agnode_s) rank.getArrayOfPtr("v").plus(i).getPtr();
	if ((ND_node_type(n) == 1 && ND_label(n)!=null) || 
             ND_node_type(n) == 0)
	    break;
    }
    if (i == hi) {  /* adjacent edge */
	do {
	    ED_adjacent(e, 1);
	    e = ED_to_virt(e);
	} while (e!=null); 
    }
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void
checkFlatAdjacent (edge_t* e)
{
    node_t* tn = agtail(e);
    node_t* hn = aghead(e);
    int i, lo, hi;
    node_t* n;
    rank_t *rank;
    if (ND_order(tn) < ND_order(hn)) {
	lo = ND_order(tn);
	hi = ND_order(hn);
    }
    else {
	lo = ND_order(hn);
	hi = ND_order(tn);
    }
    rank = &(GD_rank(dot_root(tn))[ND_rank(tn)]);
    for (i = lo + 1; i < hi; i++) {
	n = rank->v[i];
	if ((ND_node_type(n) == 1 && ND_label(n)) || 
             ND_node_type(n) == 0)
	    break;
    }
    if (i == hi) {  /* adjacent edge */
	do {
	    ED_adjacent(e) = 1;
	    e = ED_to_virt(e);
	} while (e); 
    }
}

