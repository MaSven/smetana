static __ptr__ Count;
static int C;
public static int rcross(Agraph_s g, int r) {
    int top, bot, cross, max, i, k;
    Agnode_s v;
    __ptr__ rtop;
    cross = 0;
    max = 0;
    rtop = g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r).getPtr("v");
    if (C <= Root.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r + 1).getInt("n")) {
	C = Root.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r + 1).getInt("n") + 1;
	Count = Count!=null ?
	 grealloc(Count,size_t_array_of_integer(C))
	 :
	 gmalloc(size_t_array_of_integer(C));
    }
    for (i = 0; i < g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r + 1).getInt("n"); i++)
	Count.setBracketAsInt(i, 0);
	for (top = 0; top < g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r).getInt("n"); top++) {
	Agedge_s e;
  	if (max > 0) {
UNSUPPORTED("76tw5fcj4vul3uz8hywa5qzpr"); // 	    for (i = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(rtop[top]))->data))->out).list[i]); i++) {
UNSUPPORTED("f1fvu5rcwktlutuatp4gxf28y"); // 		for (k = (((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->order) + 1; k <= max; k++)
UNSUPPORTED("c94f93ll3wt9zm8izlv12x2vn"); // 		    cross += Count[k] * (((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->xpenalty);
UNSUPPORTED("6t98dcecgbvbvtpycwiq2ynnj"); // 	    }
  	}
  	for (i = 0; (
	e = (Agedge_s) rtop.getBracket(top).castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("out").getArrayOfPtr("list", i)
	)!=null; i++) {
	    int inv = 
		(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 2?e:e.plus(-1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("order");
	    if (inv > max)
		max = inv;
	    Count.setBracketAsInt(inv, 
		  Count.getBracketAsInt(inv) +
		  e.castTo(Agobj_s.class).getPtr("data").castTo(Agedgeinfo_t.class).getInt("xpenalty"));
  	}
    }
	for (top = 0; top < g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r).getInt("n"); top++) {
	v = (Agnode_s) g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r).getArrayOfPtr("v", top);
	if (v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getBoolean("has_port"))
UNSUPPORTED("9y49l39s275959tikrwkxbwv2"); // 	    cross += local_cross((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->out), 1);
    }
    for (bot = 0; bot < g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r + 1).getInt("n"); bot++) {
  	v = (Agnode_s) g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r + 1).getArrayOfPtr("v", bot);
	if (v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getBoolean("has_port"))
UNSUPPORTED("en5r40ml3em97biq5zougsiby"); // 	    cross += local_cross((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->in), -1);
    }
    return cross;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static int rcross(graph_t * g, int r)
{
    static int *Count, C;
    int top, bot, cross, max, i, k;
    node_t **rtop, *v;
    cross = 0;
    max = 0;
    rtop = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v;
    if (C <= (((Agraphinfo_t*)(((Agobj_t*)(Root))->data))->rank)[r + 1].n) {
	C = (((Agraphinfo_t*)(((Agobj_t*)(Root))->data))->rank)[r + 1].n + 1;
	Count = (Count? (int*)grealloc(Count,(C)*sizeof(int)):(int*)gmalloc((C)*sizeof(int)));
    }
    for (i = 0; i < (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r + 1].n; i++)
	Count[i] = 0;
    for (top = 0; top < (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].n; top++) {
	register edge_t *e;
	if (max > 0) {
	    for (i = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(rtop[top]))->data))->out).list[i]); i++) {
		for (k = (((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->order) + 1; k <= max; k++)
		    cross += Count[k] * (((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->xpenalty);
	    }
	}
	for (i = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(rtop[top]))->data))->out).list[i]); i++) {
	    register int inv = (((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->order);
	    if (inv > max)
		max = inv;
	    Count[inv] += (((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->xpenalty);
	}
    }
    for (top = 0; top < (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].n; top++) {
	v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[top];
	if ((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->has_port))
	    cross += local_cross((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->out), 1);
    }
    for (bot = 0; bot < (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r + 1].n; bot++) {
	v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r + 1].v[bot];
	if ((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->has_port))
	    cross += local_cross((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->in), -1);
    }
    return cross;
}

