public static void interclrep(Agraph_s g, Agedge_s e) {
    Agnode_s t, h;
    Agedge_s ve;
    t = leader_of(g, agtail(e));
    h = leader_of(g, aghead(e));
    if (ND_rank(t) > ND_rank(h)) {
	Agnode_s t0 = t;
	t = h;
	h = t0;
    }
    if (NEQ(ND_clust(t), ND_clust(h))) {
	if ((ve = find_fast_edge(t, h))!=null) {
	    merge_chain(g, e, ve, NOT(false));
	    return;
	}
	if (ND_rank(t) == ND_rank(h))
	    return;
	make_chain(g, t, h, e);
	/* mark as cluster edge */
	for (ve = ED_to_virt(e); ve!=null && (ND_rank(aghead(ve)) <= ND_rank(h));
	     ve = (Agedge_s) ND_out(aghead(ve)).getArrayOfPtr("list").plus(0).getPtr())
	    ED_edge_type(ve, 5);
    }
    /* else ignore intra-cluster edges at this point */
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void 
interclrep(graph_t * g, edge_t * e)
{
    node_t *t, *h;
    edge_t *ve;
    t = leader_of(g, agtail(e));
    h = leader_of(g, aghead(e));
    if (ND_rank(t) > ND_rank(h)) {
	node_t *t0 = t;
	t = h;
	h = t0;
    }
    if (ND_clust(t) != ND_clust(h)) {
	if ((ve = find_fast_edge(t, h))) {
	    merge_chain(g, e, ve, NOT(0));
	    return;
	}
	if (ND_rank(t) == ND_rank(h))
	    return;
	make_chain(g, t, h, e);
	/* mark as cluster edge */
	for (ve = ED_to_virt(e); ve && (ND_rank(aghead(ve)) <= ND_rank(h));
	     ve = ND_out(aghead(ve)).list[0])
	    ED_edge_type(ve) = 5;
    }
    /* else ignore intra-cluster edges at this point */
}

