public static void doDot(Agraph_s g) {
    Agraph_s ccs[];
    Agraph_s sg;
    int ncc;
    int i;
    pack_info pinfo = (pack_info) Memory.malloc(pack_info.class);
    int Pack = getPack(g, -1, 8);
    int mode = getPackModeInfo (g, enumAsInt(pack_mode.class, "l_undef"), pinfo);
    getPackInfo(g, enumAsInt(pack_mode.class, "l_node"), 8, pinfo);
    if ((mode == enumAsInt(pack_mode.class, "l_undef")) && (Pack < 0)) {
	/* No pack information; use old dot with components
         * handled during layout
         */
	dotLayout(g);
    } else {
UNSUPPORTED("952usp51fee2pbidl2frwpq2x"); // 	/* fill in default values */
UNSUPPORTED("7d8flcn5zht92nop46f168hf9"); // 	if (mode == l_undef) 
UNSUPPORTED("bf04f2a6do2dovxgq57ta3qz5"); // 	    pinfo.mode = l_node;
UNSUPPORTED("7l7lph3yd7o3jelejupsiytnc"); // 	else if (Pack < 0)
UNSUPPORTED("7odp6lwv29g4nwpfvqt8hkmve"); // 	    Pack = 8;
UNSUPPORTED("au4kpvl0egq3dt8hlmqnad61o"); // 	pinfo.margin = Pack;
UNSUPPORTED("6o6lvrnsp1zkqdkduwrfetrrm"); // 	pinfo.fixed = 0;
UNSUPPORTED("7ijhbsssflu2oty986iwhi5u7"); //           /* components using clusters */
UNSUPPORTED("axesx20t6oyprzdzjz5cwneq4"); // 	ccs = cccomps(g, &ncc, 0);
UNSUPPORTED("edukq9g8egufczs6ja3h99k6a"); // 	if (ncc == 1) {
UNSUPPORTED("aj3wrqm1ouyaocsn56geghko0"); // 	    dotLayout(g);
UNSUPPORTED("2pkescmk4qojc8cqt3wzo8jkp"); // 	} else if ((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->drawing)->ratio_kind == R_NONE) {
UNSUPPORTED("295yqzsqueggcx71mcuv1zy7t"); // 	    pinfo.doSplines = 1;
UNSUPPORTED("3rfcnwowz3h58n92j7igzwap0"); // 	    for (i = 0; i < ncc; i++) {
UNSUPPORTED("6n1wgj9rnpi5u0c1f6mo7hvdr"); // 		sg = ccs[i];
UNSUPPORTED("9f5l1z5fur3bn6wlzykztsrr5"); // 		initSubg (sg, g);
UNSUPPORTED("boery4d5nv4jssiy0y3mf2yf7"); // 		dotLayout (sg);
UNSUPPORTED("6t98dcecgbvbvtpycwiq2ynnj"); // 	    }
UNSUPPORTED("ahr97rgrh96az7iroebb6p14f"); // 	    attachPos (g);
UNSUPPORTED("1eeqkm1855z53jwep9ukxptxa"); // 	    packSubgraphs(ncc, ccs, g, &pinfo);
UNSUPPORTED("5jevnxwr3ejh3o6i1n3b15oyz"); // 	    resetCoord (g);
UNSUPPORTED("7yhr8hn3r6wohafwxrt85b2j2"); // 	} else {
UNSUPPORTED("3dnz4esjw60s265perisqld8n"); // 	    /* Not sure what semantics should be for non-trivial ratio
UNSUPPORTED("9752lfn24j9vhkz6y8fvyvpop"); //              * attribute with multiple components.
UNSUPPORTED("cxv608avcmjij1ltc81ac9zp0"); //              * One possibility is to layout nodes, pack, then apply the ratio
UNSUPPORTED("71ykqx29qwldoh9wf4e85xh7u"); //              * adjustment. We would then have to re-adjust all positions.
UNSUPPORTED("29edlge3wqyp1gs0vymtr5700"); //              */
UNSUPPORTED("aj3wrqm1ouyaocsn56geghko0"); // 	    dotLayout(g);
UNSUPPORTED("flupwh3kosf3fkhkxllllt1"); // 	}
UNSUPPORTED("cjjlbx1oxw3twss3vlotij507"); // 	for (i = 0; i < ncc; i++) {
UNSUPPORTED("dc0uduk2687c8n6qn7y3y0aph"); // 	    free ((((Agraphinfo_t*)(((Agobj_t*)(ccs[i]))->data))->drawing));
UNSUPPORTED("6lefivq8plsiwa47ucvy1ze1a"); // 	    agdelete(g, ccs[i]);
UNSUPPORTED("flupwh3kosf3fkhkxllllt1"); // 	}
UNSUPPORTED("5eru5cerydhchm7ojmgdlkv9y"); // 	free(ccs);
    }
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void doDot (Agraph_t* g)
{
    Agraph_t **ccs;
    Agraph_t *sg;
    int ncc;
    int i;
    pack_info pinfo;
    int Pack = getPack(g, -1, 8);
    pack_mode mode = getPackModeInfo (g, l_undef, &pinfo);
    getPackInfo(g, l_node, 8, &pinfo);
    if ((mode == l_undef) && (Pack < 0)) {
	/* No pack information; use old dot with components
         * handled during layout
         */
	dotLayout(g);
    } else {
	/* fill in default values */
	if (mode == l_undef) 
	    pinfo.mode = l_node;
	else if (Pack < 0)
	    Pack = 8;
	pinfo.margin = Pack;
	pinfo.fixed = 0;
          /* components using clusters */
	ccs = cccomps(g, &ncc, 0);
	if (ncc == 1) {
	    dotLayout(g);
	} else if ((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->drawing)->ratio_kind == R_NONE) {
	    pinfo.doSplines = 1;
	    for (i = 0; i < ncc; i++) {
		sg = ccs[i];
		initSubg (sg, g);
		dotLayout (sg);
	    }
	    attachPos (g);
	    packSubgraphs(ncc, ccs, g, &pinfo);
	    resetCoord (g);
	} else {
	    /* Not sure what semantics should be for non-trivial ratio
             * attribute with multiple components.
             * One possibility is to layout nodes, pack, then apply the ratio
             * adjustment. We would then have to re-adjust all positions.
             */
	    dotLayout(g);
	}
	for (i = 0; i < ncc; i++) {
	    free ((((Agraphinfo_t*)(((Agobj_t*)(ccs[i]))->data))->drawing));
	    agdelete(g, ccs[i]);
	}
	free(ccs);
    }
}

