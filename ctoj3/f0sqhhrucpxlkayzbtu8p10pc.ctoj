public static void restore_best(Agraph_s g) {
    Agnode_s n;
    int r;
    for (n = (Agnode_s) g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getPtr("nlist")
    ; n!=null;
    n = (Agnode_s) n.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("next"))
	n.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).setInt("order",
	  (int)n.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("coord").getDouble("x"));
    for (r = g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getInt("minrank");
    r <= g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getInt("maxrank");
    r++) {
	Root.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r).setInt("valid", 0);
	qsort(
	g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r).getPtr("v")
	,
	g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", r).getInt("n")
	,
	sizeof(g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getArrayOfPtr("rank", 0).getArrayOfPtr("v", 0))
	,
		  function(mincross.class, "nodeposcmpf")
	);
    }
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void restore_best(graph_t * g)
{
    node_t *n;
    int r;
    for (n = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->nlist); n; n = (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->next))
	(((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->order) = ((((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->coord)).x;
    for (r = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->minrank); r <= (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->maxrank); r++) {
	(((Agraphinfo_t*)(((Agobj_t*)(Root))->data))->rank)[r].valid = 0;
	qsort((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v, (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].n, sizeof((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[0].v[0]),
	      (qsort_cmpf) nodeposcmpf);
    }
}

