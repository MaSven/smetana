public static void dot_compute_bb(Agraph_s g, Agraph_s root) {
    int r, c;
    double x, offset;
    Agnode_s v;
    pointf LL = (pointf) Memory.malloc(pointf.class);
    pointf UR = (pointf) Memory.malloc(pointf.class);
    if (EQ(g, dot_root(g))) {
	LL.setDouble("x", Integer.MAX_VALUE);
	UR.setDouble("x", -((double)Integer.MAX_VALUE));
UNSUPPORTED("bawg9qsymdfm43bef7jjdhbx7"); // 	for (r = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->minrank); r <= (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->maxrank); r++) {
UNSUPPORTED("ds124rekwn9i2ag2ui4iyp6le"); // 	    int rnkn = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].n;
UNSUPPORTED("7w15mec7pm12mkco5o8ixwe0h"); // 	    if (rnkn == 0)
UNSUPPORTED("6hyelvzskqfqa07xtgjtvg2is"); // 		continue;
UNSUPPORTED("6rrid4itpssi0sc6968dutvbu"); // 	    if ((v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[0]) == NULL)
UNSUPPORTED("6hyelvzskqfqa07xtgjtvg2is"); // 		continue;
UNSUPPORTED("6yyvm0w39z8i3qc2wm0m5lru4"); // 	    for (c = 1; ((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->node_type) != 0) && c < rnkn; c++)
UNSUPPORTED("7lld2zp0gatwzr2x9h0mlqc40"); // 		v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[c];
UNSUPPORTED("946epmajxdd976dvnu3k6t06j"); // 	    if ((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->node_type) == 0) {
UNSUPPORTED("94sc56v6dabluxfn4yt0xbe0n"); // 		x = (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->coord).x - (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->lw);
UNSUPPORTED("8alwopbupg4huo1g5e1dqm7y2"); // 		LL.x = ((LL.x)<(x)?(LL.x):(x));
UNSUPPORTED("6t98dcecgbvbvtpycwiq2ynnj"); // 	    }
UNSUPPORTED("2tp8k933q97stt0b7ye7izhfe"); // 	    else continue;
UNSUPPORTED("epnmev5dd3lmmh3mlrmzzlb4a"); // 		/* At this point, we know the rank contains a NORMAL node */
UNSUPPORTED("303eyef1f7fq1nfzs9p0tpo8a"); // 	    v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[rnkn - 1];
UNSUPPORTED("6z6dprzp6zu4s3ynxvyu8n0l"); // 	    for (c = rnkn-2; (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->node_type) != 0; c--)
UNSUPPORTED("7lld2zp0gatwzr2x9h0mlqc40"); // 		v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[c];
UNSUPPORTED("32w4qtqubvitzo3chceuh6epc"); // 	    x = (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->coord).x + (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->rw);
UNSUPPORTED("5mh7tlim04nlh9fp3wn58ugli"); // 	    UR.x = ((UR.x)>(x)?(UR.x):(x));
UNSUPPORTED("flupwh3kosf3fkhkxllllt1"); // 	}
UNSUPPORTED("azec9elm7d70w7otnivb0iyrn"); // 	offset = 8;
UNSUPPORTED("a6e3twdbb4v8mwzh3ukonknuf"); // 	for (c = 1; c <= (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->n_cluster); c++) {
UNSUPPORTED("3rojrkbyyd6xsvyave2s6ysgz"); // 	    x = (double)((((Agraphinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->clust)[c]))->data))->bb).LL.x - offset);
UNSUPPORTED("32lfxtcy1tj7duilw0837cssx"); // 	    LL.x = ((LL.x)<(x)?(LL.x):(x));
UNSUPPORTED("afkr3njjjh8677dyf5th9eolz"); // 	    x = (double)((((Agraphinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->clust)[c]))->data))->bb).UR.x + offset);
UNSUPPORTED("5mh7tlim04nlh9fp3wn58ugli"); // 	    UR.x = ((UR.x)>(x)?(UR.x):(x));
UNSUPPORTED("flupwh3kosf3fkhkxllllt1"); // 	}
    } else {
UNSUPPORTED("eub3d3dsl4toaklch126p52fv"); // 	LL.x = (double)((((Agnodeinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->ln)))->data))->rank));
UNSUPPORTED("7t4v2rhmx9xjo1zvccsa270qs"); // 	UR.x = (double)((((Agnodeinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rn)))->data))->rank));
    }
UNSUPPORTED("d4bgq305cpfuiacjnec5u4g6n"); //     LL.y = (((Agnodeinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(root))->data))->rank)[(((Agraphinfo_t*)(((Agobj_t*)(g))->data))->maxrank)].v[0]))->data))->coord).y - (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->ht1);
UNSUPPORTED("8esoxa7fjeivcvwdml5xw9oiz"); //     UR.y = (((Agnodeinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(root))->data))->rank)[(((Agraphinfo_t*)(((Agobj_t*)(g))->data))->minrank)].v[0]))->data))->coord).y + (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->ht2);
UNSUPPORTED("afih6330yrhu1529em9qvu11b"); //     (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->bb).LL = LL;
UNSUPPORTED("86i2jjf4x6konr2b3sdxpafsv"); //     (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->bb).UR = UR;
UNSUPPORTED("c24nfmv9i7o5eoqaymbibp7m7"); // }

throw new UnsupportedOperationException();
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void dot_compute_bb(graph_t * g, graph_t * root)
{
    int r, c;
    double x, offset;
    node_t *v;
    pointf LL, UR;
    if (g == dot_root(g)) {
	LL.x = (double)(((int)(~(unsigned)0 >> 1)));
	UR.x = (double)(-((int)(~(unsigned)0 >> 1)));
	for (r = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->minrank); r <= (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->maxrank); r++) {
	    int rnkn = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].n;
	    if (rnkn == 0)
		continue;
	    if ((v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[0]) == NULL)
		continue;
	    for (c = 1; ((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->node_type) != 0) && c < rnkn; c++)
		v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[c];
	    if ((((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->node_type) == 0) {
		x = (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->coord).x - (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->lw);
		LL.x = ((LL.x)<(x)?(LL.x):(x));
	    }
	    else continue;
		/* At this point, we know the rank contains a NORMAL node */
	    v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[rnkn - 1];
	    for (c = rnkn-2; (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->node_type) != 0; c--)
		v = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)[r].v[c];
	    x = (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->coord).x + (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->rw);
	    UR.x = ((UR.x)>(x)?(UR.x):(x));
	}
	offset = 8;
	for (c = 1; c <= (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->n_cluster); c++) {
	    x = (double)((((Agraphinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->clust)[c]))->data))->bb).LL.x - offset);
	    LL.x = ((LL.x)<(x)?(LL.x):(x));
	    x = (double)((((Agraphinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->clust)[c]))->data))->bb).UR.x + offset);
	    UR.x = ((UR.x)>(x)?(UR.x):(x));
	}
    } else {
	LL.x = (double)((((Agnodeinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->ln)))->data))->rank));
	UR.x = (double)((((Agnodeinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rn)))->data))->rank));
    }
    LL.y = (((Agnodeinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(root))->data))->rank)[(((Agraphinfo_t*)(((Agobj_t*)(g))->data))->maxrank)].v[0]))->data))->coord).y - (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->ht1);
    UR.y = (((Agnodeinfo_t*)(((Agobj_t*)((((Agraphinfo_t*)(((Agobj_t*)(root))->data))->rank)[(((Agraphinfo_t*)(((Agobj_t*)(g))->data))->minrank)].v[0]))->data))->coord).y + (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->ht2);
    (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->bb).LL = LL;
    (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->bb).UR = UR;
}

