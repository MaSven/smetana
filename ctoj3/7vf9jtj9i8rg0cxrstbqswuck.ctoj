public static void loadtriangle(__ptr__ pnlap, __ptr__ pnlbp, __ptr__ pnlcp) {
    triangle_t trip;
    int ei;
    /* make space */
    if (tril >= trin)
	growtris(trin + 20);
    trip = (triangle_t) tris.plus(tril++);
    trip.setInt("mark", 0);
    trip.getArrayOfStruct("e").plus(0).getStruct().setPtr("pnl0p", pnlap);
    trip.getArrayOfStruct("e").plus(0).getStruct().setPtr("pnl1p", pnlbp);
    trip.getArrayOfStruct("e").plus(0).getStruct().setPtr("rtp", null);
    trip.getArrayOfStruct("e").plus(1).getStruct().setPtr("pnl0p", pnlbp);
    trip.getArrayOfStruct("e").plus(1).getStruct().setPtr("pnl1p", pnlcp);
    trip.getArrayOfStruct("e").plus(1).getStruct().setPtr("rtp", null);
    trip.getArrayOfStruct("e").plus(2).getStruct().setPtr("pnl0p", pnlcp);
    trip.getArrayOfStruct("e").plus(2).getStruct().setPtr("pnl1p", pnlap);
    trip.getArrayOfStruct("e").plus(2).getStruct().setPtr("rtp", null);
    for (ei = 0; ei < 3; ei++)
	trip.getArrayOfStruct("e").plus(ei).getStruct().setPtr("ltp", trip);
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void loadtriangle(pointnlink_t * pnlap, pointnlink_t * pnlbp,
			 pointnlink_t * pnlcp)
{
    triangle_t *trip;
    int ei;
    /* make space */
    if (tril >= trin)
	growtris(trin + 20);
    trip = &tris[tril++];
    trip->mark = 0;
    trip->e[0].pnl0p = pnlap, trip->e[0].pnl1p = pnlbp, trip->e[0].rtp =
	NULL;
    trip->e[1].pnl0p = pnlbp, trip->e[1].pnl1p = pnlcp, trip->e[1].rtp =
	NULL;
    trip->e[2].pnl0p = pnlcp, trip->e[2].pnl1p = pnlap, trip->e[2].rtp =
	NULL;
    for (ei = 0; ei < 3; ei++)
	trip->e[ei].ltp = trip;
}

