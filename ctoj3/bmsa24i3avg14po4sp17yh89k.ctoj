public static int edgelblcmpfn(__ptr__ ptr0, __ptr__ ptr1) {
    Agedge_s e0, e1;
    final __struct__<pointf> sz0 = __struct__.from(pointf.class), sz1 = __struct__.from(pointf.class);
    e0 = (Agedge_s) ptr0.getPtr();
    e1 = (Agedge_s) ptr1.getPtr();
    if (ED_label(e0)!=null) {
	if (ED_label(e1)!=null) {
	    sz0.____(ED_label(e0).getStruct("dimen"));
	    sz1.____(ED_label(e1).getStruct("dimen"));
	    if (sz0.getDouble("x") > sz1.getDouble("x")) return -1;
	    else if (sz0.getDouble("x") < sz1.getDouble("x")) return 1;
	    else if (sz0.getDouble("y") > sz1.getDouble("y")) return -1;
	    else if (sz0.getDouble("y") < sz1.getDouble("y")) return 1;
	    else return 0;
	}
	else
	    return -1;
    }
    else if (ED_label(e1)!=null) {
 	return 1;
    }
    else
 	return 0;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static int edgelblcmpfn(edge_t** ptr0, edge_t** ptr1)
{
    edge_t *e0, *e1;
    pointf sz0, sz1;
    e0 = (edge_t *) * ptr0;
    e1 = (edge_t *) * ptr1;
    if (ED_label(e0)) {
	if (ED_label(e1)) {
	    sz0 = ED_label(e0)->dimen;
	    sz1 = ED_label(e1)->dimen;
	    if (sz0.x > sz1.x) return -1;
	    else if (sz0.x < sz1.x) return 1;
	    else if (sz0.y > sz1.y) return -1;
	    else if (sz0.y < sz1.y) return 1;
	    else return 0;
	}
	else
	    return -1;
    }
    else if (ED_label(e1)) {
 	return 1;
    }
    else
 	return 0;
}

