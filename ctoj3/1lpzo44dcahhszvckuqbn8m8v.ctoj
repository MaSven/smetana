public static Agnode_s virtual_node(Agraph_s g) {
    Agnode_s n;
    n = (Agnode_s)zmalloc(sizeof(Agnode_s.class));
//  agnameof(n) = "virtual";
    n.castTo(Agobj_s.class).getPtr("tag").setInt("objtype", 1);
    n.getPtr("base").setPtr("data", (Agnodeinfo_t)zmalloc(sizeof(Agnodeinfo_t.class)));
    n.setPtr("root", agroot(g));
    n.castTo(Agobj_s.class).getPtr("data").setInt("node_type", 1);
    n.castTo(Agobj_s.class).getPtr("data").setDouble("rw", 1);
    n.castTo(Agobj_s.class).getPtr("data").setDouble("lw", 1);
    n.castTo(Agobj_s.class).getPtr("data").setDouble("ht", 1);
    n.castTo(Agobj_s.class).getPtr("data").setInt("UF_size", 1);
    do {
		n.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("in").setInt("size", 0);
		n.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("in").setPtr("list", 
		  zmalloc(sizeof_starstar(Agedge_s.class, 4 + 1)));
	} while (false);
	do {
		n.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("out").setInt("size", 0);
		n.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("out").setPtr("list", 
		  zmalloc(sizeof_starstar(Agedge_s.class, 4 + 1)));
	} while (false);
    fast_node(g, n);
	   g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).setInt("n_nodes",
	    1+g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getInt("n_nodes"));
    return n;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
node_t *virtual_node(graph_t * g)
{
    node_t *n;
    n = (node_t*)zmalloc(sizeof(node_t));
//  agnameof(n) = "virtual";
    ((((Agobj_t*)(n))->tag).objtype) = 1;
    n->base.data = (Agrec_t*)(Agnodeinfo_t*)zmalloc(sizeof(Agnodeinfo_t));
    n->root = agroot(g);
    (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->node_type) = 1;
    (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->lw) = (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->rw) = 1;
    (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->ht) = 1;
    (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->UF_size) = 1;
    do {(((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->in).size = 0; (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->in).list = (edge_t**)zmalloc((4 + 1)*sizeof(edge_t*)); } while (0);
    do {(((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->out).size = 0; (((Agnodeinfo_t*)(((Agobj_t*)(n))->data))->out).list = (edge_t**)zmalloc((4 + 1)*sizeof(edge_t*)); } while (0);
    fast_node(g, n);
    (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->n_nodes)++;
    return n;
}

