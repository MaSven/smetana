public static int dfs_range(Agnode_s v, Agedge_s par, int low) {
    Agedge_s e;
    int i, lim;
    lim = low;
    v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).setPtr("par", par);
    v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).setPtr("low", low);
    for (i = 0;
    (e = (Agedge_s) v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("tree_out").getArrayOfPtr("list", i))!=null
    ; i++)
	if (NEQ(e, par))
	    lim = dfs_range(
		(Agnode_s) (e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 2? e: e.plus(-1)).getPtr("node")
		, e, lim);
      for (i = 0;
	  (e = (Agedge_s) v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("tree_in").getArrayOfPtr("list", i))!=null
	  ; i++)
	if (NEQ(e, par))
	    lim = dfs_range(
		(Agnode_s) (e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 3? e: e.plus(1)).getPtr("node")
	    , e, lim);
    v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).setInt("lim", lim);
    return lim + 1;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static int dfs_range(node_t * v, edge_t * par, int low)
{
    edge_t *e;
    int i, lim;
    lim = low;
    (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->par) = par;
    (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->low) = low;
    for (i = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->tree_out).list[i]); i++)
	if (e != par)
	    lim = dfs_range(((((((Agobj_t*)(e))->tag).objtype) == 2? (e): ((e)-1))->node), e, lim);
    for (i = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->tree_in).list[i]); i++)
	if (e != par)
	    lim = dfs_range(((((((Agobj_t*)(e))->tag).objtype) == 3? (e): ((e)+1))->node), e, lim);
    (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->lim) = lim;
    return lim + 1;
}

