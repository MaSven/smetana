public static Agraph_s agopen1(Agraph_s g) {
    Agraph_s par;
    g.setPtr("n_seq", agdtopen(g, Ag_subnode_seq_disc, Dttree));
    g.setPtr("n_id", agdtopen(g, Ag_subnode_id_disc, Dttree));
    g.setPtr("e_seq", agdtopen(g, EQ(g, agroot(g))? Ag_mainedge_seq_disc : Ag_subedge_seq_disc, Dttree));
    g.setPtr("e_id", agdtopen(g, EQ(g, agroot(g))? Ag_mainedge_id_disc : Ag_subedge_id_disc, Dttree));
    g.setPtr("g_dict", agdtopen(g, Ag_subgraph_id_disc, Dttree));
    par = agparent(g);
    if (par!=null) {
  	g.castTo(Agobj_s.class).getPtr("tag").setPtr("seq", agnextseq(par, 0));
  	par.getPtr("g_dict").call("searchf", par.getPtr("g_dict"),g,0000001);
    }				/* else AGSEQ=0 */
    if (N(par) || par.getPtr("desc").getInt("has_attrs")!=0)
	agraphattr_init(g);
    agmethod_init(g, g);
    return g;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Agraph_t *agopen1(Agraph_t * g)
{
    Agraph_t *par;
    g->n_seq = agdtopen(g, &Ag_subnode_seq_disc, Dttree);
    g->n_id = agdtopen(g, &Ag_subnode_id_disc, Dttree);
    g->e_seq = agdtopen(g, g == agroot(g)? &Ag_mainedge_seq_disc : &Ag_subedge_seq_disc, Dttree);
    g->e_id = agdtopen(g, g == agroot(g)? &Ag_mainedge_id_disc : &Ag_subedge_id_disc, Dttree);
    g->g_dict = agdtopen(g, &Ag_subgraph_id_disc, Dttree);
    par = agparent(g);
    if (par) {
	((((Agobj_t*)(g))->tag).seq) = agnextseq(par, 0);
	(*(((Dt_t*)(par->g_dict))->searchf))((par->g_dict),(void*)(g),0000001);
    }				/* else AGSEQ=0 */
    if (!par || par->desc.has_attrs)
	agraphattr_init(g);
    agmethod_init(g, g);
    return g;
}

