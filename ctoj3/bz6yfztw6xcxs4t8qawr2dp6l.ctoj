public static int treesearch(Agnode_s v) {
    int i;
    Agedge_s e;
    for (i = 0;
    (e = (Agedge_s) v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("out").getArrayOfPtr("list", i))!=null
    ; i++) {
	if (
	(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 2?e:e.plus(-1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("mark") == 0 
	&&
	(
	(
	(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 2?e:e.plus(-1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
	-
	(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 3?e:e.plus(1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
	)
	-
	e.castTo(Agobj_s.class).getPtr("data").castTo(Agedgeinfo_t.class).getInt("minlen")
	)
	== 0
	) {
	    add_tree_edge(e);
	    if (
		Tree_edge.getInt("size") == N_nodes - 1
		||
		treesearch((Agnode_s) (e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 2? e: e.plus(-1)).getPtr("node"))!=0
		)
		return 1;
	}
    }
    for (i = 0;
    (e = (Agedge_s) v.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("in").getArrayOfPtr("list", i))!=null
    ; i++) {
	if (
	(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 3?e:e.plus(1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("mark") == 0 
	&&
	(
	(
	(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 2?e:e.plus(-1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
	-
	(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 3?e:e.plus(1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
	)
	-
	e.castTo(Agobj_s.class).getPtr("data").castTo(Agedgeinfo_t.class).getInt("minlen")
	)
	== 0
	) {
UNSUPPORTED("7gwsx8inwxlpl498qeiow1bog"); // 	    add_tree_edge(e);
UNSUPPORTED("9wsukv4snrwl7nj4ebgc47zjt"); // 	    if ((Tree_edge.size == N_nodes - 1) || treesearch(((((((Agobj_t*)(e))->tag).objtype) == 3? (e): ((e)+1))->node)))
		return 1;
	}
    }
    return 0;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static int treesearch(node_t * v)
{
    int i;
    edge_t *e;
    for (i = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->out).list[i]); i++) {
	if (((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->mark) == 0) && ((((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->rank) - (((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 3?(e):((e)+1))->node)))->data))->rank)) - (((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->minlen)) == 0)) {
	    add_tree_edge(e);
	    if ((Tree_edge.size == N_nodes - 1) || treesearch(((((((Agobj_t*)(e))->tag).objtype) == 2? (e): ((e)-1))->node)))
		return (!(0));
	}
    }
    for (i = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(v))->data))->in).list[i]); i++) {
	if (((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 3?(e):((e)+1))->node)))->data))->mark) == 0) && ((((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->rank) - (((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 3?(e):((e)+1))->node)))->data))->rank)) - (((Agedgeinfo_t*)(((Agobj_t*)(e))->data))->minlen)) == 0)) {
	    add_tree_edge(e);
	    if ((Tree_edge.size == N_nodes - 1) || treesearch(((((((Agobj_t*)(e))->tag).objtype) == 3? (e): ((e)+1))->node)))
		return (!(0));
	}
    }
    return 0;
}

