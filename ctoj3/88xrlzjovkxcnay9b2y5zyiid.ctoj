public static void adjustregularpath(path P, int fb, int lb) {
    boxf bp1, bp2;
    int i, x;
    for (i = fb-1; i < lb+1; i++) {
	bp1 = P.getArrayOfPtr("boxes").plus(i).getStruct().amp();
	if ((i - fb) % 2 == 0) {
	    if (bp1.getStruct("LL").getDouble("x") >= bp1.getStruct("UR").getDouble("x")) {
		x = (int)((bp1.getStruct("LL").getDouble("x") + bp1.getStruct("UR").getDouble("x")) / 2);
		bp1.getStruct("LL").setDouble("x", x - 8);
		bp1.getStruct("UR").setDouble("x", x + 8);
	    }
	} else {
	    if (bp1.getStruct("LL").getDouble("x") + 16 > bp1.getStruct("UR").getDouble("x")) {
		x = (int)((bp1.getStruct("LL").getDouble("x") + bp1.getStruct("UR").getDouble("x")) / 2);
		bp1.getStruct("LL").setDouble("x", x - 8);
		bp1.getStruct("UR").setDouble("x", x + 8);
	    }
	}
    }
    for (i = 0; i < P.getInt("nbox") - 1; i++) {
	bp1 = P.getArrayOfPtr("boxes").plus(i).getStruct().amp();
	bp2 = P.getArrayOfPtr("boxes").plus(i+1).getStruct().amp();
	if (i >= fb && i <= lb && (i - fb) % 2 == 0) {
	    if (bp1.getStruct("LL").getDouble("x") + 16 > bp2.getStruct("UR").getDouble("x"))
		bp2.getStruct("UR").setDouble("x", bp1.getStruct("LL").getDouble("x") + 16);
	    if (bp1.getStruct("UR").getDouble("x") - 16 < bp2.getStruct("LL").getDouble("x"))
		bp2.getStruct("LL").setDouble("x", bp1.getStruct("UR").getDouble("x") - 16);
	} else if (i + 1 >= fb && i < lb && (i + 1 - fb) % 2 == 0) {
	    if (bp1.getStruct("LL").getDouble("x") + 16 > bp2.getStruct("UR").getDouble("x"))
		bp1.getStruct("LL").setDouble("x", bp2.getStruct("UR").getDouble("x") - 16);
	    if (bp1.getStruct("UR").getDouble("x") - 16 < bp2.getStruct("LL").getDouble("x"))
		bp1.getStruct("UR").setDouble("x", bp2.getStruct("LL").getDouble("x") + 16);
	} 
    }
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void adjustregularpath(path * P, int fb, int lb)
{
    boxf *bp1, *bp2;
    int i, x;
    for (i = fb-1; i < lb+1; i++) {
	bp1 = &P->boxes[i];
	if ((i - fb) % 2 == 0) {
	    if (bp1->LL.x >= bp1->UR.x) {
		x = (bp1->LL.x + bp1->UR.x) / 2;
		bp1->LL.x = x - 8, bp1->UR.x = x + 8;
	    }
	} else {
	    if (bp1->LL.x + 16 > bp1->UR.x) {
		x = (bp1->LL.x + bp1->UR.x) / 2;
		bp1->LL.x = x - 8, bp1->UR.x = x + 8;
	    }
	}
    }
    for (i = 0; i < P->nbox - 1; i++) {
	bp1 = &P->boxes[i], bp2 = &P->boxes[i + 1];
	if (i >= fb && i <= lb && (i - fb) % 2 == 0) {
	    if (bp1->LL.x + 16 > bp2->UR.x)
		bp2->UR.x = bp1->LL.x + 16;
	    if (bp1->UR.x - 16 < bp2->LL.x)
		bp2->LL.x = bp1->UR.x - 16;
	} else if (i + 1 >= fb && i < lb && (i + 1 - fb) % 2 == 0) {
	    if (bp1->LL.x + 16 > bp2->UR.x)
		bp1->LL.x = bp2->UR.x - 16;
	    if (bp1->UR.x - 16 < bp2->LL.x)
		bp1->UR.x = bp2->LL.x + 16;
	} 
    }
}

