public static __struct__<pointf> textspan_size(GVC_s gvc, __ptr__ span) {
	System.err.println("Warning:textspan_size "+span);
	span.getStruct("size").setDouble("x", 30);
	span.getStruct("size").setDouble("y", 20);
    return span.getStruct("size").copy();
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
pointf textspan_size(GVC_t *gvc, textspan_t * span)
{
    char **fpp = NULL, *fontpath = NULL;
    textfont_t *font;
    assert(span->font);
    font = span->font;
    assert(font->name);
    /* only need to find alias once per font, since they are unique in dict */
    if (! font->postscript_alias) 
        font->postscript_alias = translate_postscript_fontname(font->name);
    if (Verbose && emit_once(font->name))
	fpp = &fontpath;
    if (! gvtextlayout(gvc, span, fpp))
	estimate_textspan_size(span, fpp);
    if (fpp) {
	if (fontpath)
	    fprintf(stderr, "fontname: \"%s\" resolved to: %s\n",
		    font->name, fontpath);
	else
	    fprintf(stderr, "fontname: unable to resolve \"%s\"\n", font->name);
    }
    return span->size;
}

