public static void connectGraph(Agraph_s g) {
    int i, j, r, found;
    Agnode_s tp;
    Agnode_s hp;
    Agnode_s sn;
    Agedge_s e;
    __ptr__ rp;
    for (r = g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getInt("minrank");
     r <= g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getInt("maxrank"); r++) {
	rp = g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getPtr("rank").plus(r);
	found =0;
        tp = null;
	for (i = 0; i < rp.getBracket(0).getInt("n"); i++) {
	    tp = (Agnode_s) rp.getBracket(0).getArrayOfPtr("v", i);
	    if (tp.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("save_out").getPtr("list")!=null) {
        	for (j = 0;
        	(e = (Agedge_s) tp.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("save_out").getArrayOfPtr("list", j))!=null
        	; j++) {
		    if (
			(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 2?e:e.plus(-1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
			> r 
			||
			(e.castTo(Agobj_s.class).getPtr("tag").getInt("objtype") == 3?e:e.plus(1)).getPtr("node").castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
			> r
			) {
			found = 1;
			break;
		    }
        	}
		if (found!=0) break;
	    }
	    if (tp.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("save_in").getPtr("list")!=null) {
        	for (j = 0;
        	(e = (Agedge_s) tp.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getPtr("save_in").getArrayOfPtr("list", j))!=null
        	; j++) {
UNSUPPORTED("3shl9uml1gf2jvmc0rhyap4yk"); // 		    if (((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 3?(e):((e)+1))->node)))->data))->rank) > r) || ((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->rank) > r)) {
UNSUPPORTED("f52r1wdl0r6f1hp30a4dcblek"); // 			found = (!(0));
UNSUPPORTED("a5064jph9xpw67dcun2my4mcm"); // 			break;
UNSUPPORTED("dkxvw03k2gg9anv4dbze06axd"); // 		    }
        	}
		if (found!=0) break;
	    }
	}
	if (found!=0 || N(tp)) continue;
	tp = (Agnode_s) rp.getBracket(0).getArrayOfPtr("v", 0);
	if (r < g.castTo(Agobj_s.class).getPtr("data").castTo(Agraphinfo_t.class).getInt("maxrank"))
	hp = (Agnode_s) rp.getBracket(1).getArrayOfPtr("v", 0);
	else hp = (Agnode_s) rp.getBracket(-1).getArrayOfPtr("v", 0);
	// assert (hp);
	sn = virtual_node(g);
	sn.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).setInt("node_type", 2);
	make_aux_edge(sn, tp, 0, 0);
	make_aux_edge(sn, hp, 0, 0);
	sn.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).setInt("rank",
		tp.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
		<
		hp.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
		?
		tp.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
		:
		hp.castTo(Agobj_s.class).getPtr("data").castTo(Agnodeinfo_t.class).getInt("rank")
		);
    }
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
static void
connectGraph (graph_t* g)
{
    int i, j, r, found;
    node_t* tp;
    node_t* hp;
    node_t* sn;
    edge_t* e;
    rank_t* rp;
    for (r = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->minrank); r <= (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->maxrank); r++) {
	rp = (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->rank)+r;
	found =0;
        tp = NULL;
	for (i = 0; i < rp->n; i++) {
	    tp = rp->v[i];
	    if ((((Agnodeinfo_t*)(((Agobj_t*)(tp))->data))->save_out).list) {
        	for (j = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(tp))->data))->save_out).list[j]); j++) {
		    if (((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->rank) > r) || ((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 3?(e):((e)+1))->node)))->data))->rank) > r)) {
			found = (!(0));
			break;
		    }
        	}
		if (found) break;
	    }
	    if ((((Agnodeinfo_t*)(((Agobj_t*)(tp))->data))->save_in).list) {
        	for (j = 0; (e = (((Agnodeinfo_t*)(((Agobj_t*)(tp))->data))->save_in).list[j]); j++) {
		    if (((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 3?(e):((e)+1))->node)))->data))->rank) > r) || ((((Agnodeinfo_t*)(((Agobj_t*)(((((((Agobj_t*)(e))->tag).objtype) == 2?(e):((e)-1))->node)))->data))->rank) > r)) {
			found = (!(0));
			break;
		    }
        	}
		if (found) break;
	    }
	}
	if (found || !tp) continue;
	tp = rp->v[0];
	if (r < (((Agraphinfo_t*)(((Agobj_t*)(g))->data))->maxrank)) hp = (rp+1)->v[0];
	else hp = (rp-1)->v[0];
	assert (hp);
	sn = virtual_node(g);
	(((Agnodeinfo_t*)(((Agobj_t*)(sn))->data))->node_type) = 2;
	make_aux_edge(sn, tp, 0, 0);
	make_aux_edge(sn, hp, 0, 0);
	(((Agnodeinfo_t*)(((Agobj_t*)(sn))->data))->rank) = (((((Agnodeinfo_t*)(((Agobj_t*)(tp))->data))->rank))<((((Agnodeinfo_t*)(((Agobj_t*)(hp))->data))->rank))?((((Agnodeinfo_t*)(((Agobj_t*)(tp))->data))->rank)):((((Agnodeinfo_t*)(((Agobj_t*)(hp))->data))->rank)));
    }
}

