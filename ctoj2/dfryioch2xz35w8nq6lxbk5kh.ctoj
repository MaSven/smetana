@TranslatedBy("plantuml")
@HasQuestion("For the test /* must use the same method */")
@NeedReview
public static Dict_t dtview(Dict_t dt, Dict_t view) {
	Dict_t	d;
	if ((dt.data.type&010000)!=0) dtrestore(dt,null);
	if(view!=null)
	{	if ((view.data.type&010000)!=0) dtrestore(view,null);
		if(view.meth != dt.meth) /* must use the same method */
			return null;
	}
	/* make sure there won't be a cycle */
	for(d = view; d!=null; d = d.view)
		if(d == dt)
			return null;
	/* no more viewing lower dictionary */
	if((d = dt.view)!=null )
		d.nview -= 1;
	dt.view = dt.walk = null;
	if(N(view))
	{	dt.searchf = dt.meth.searchf;
		return d;
	}
	/* ok */
	dt.view = view;
	dt.searchf = new Dtsearch_f() {
		public StarVoid function(Dict_t arg1, StarVoid arg2, int arg3) {
			return dtvsearch(arg1, arg2, arg3);
		}};
	view.nview += 1;
	return view;
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Dt_t* dtview(register Dt_t* dt, register Dt_t* view)
{
	register Dt_t*	d;
	((dt->data->type&010000) ? dtrestore(dt,((Dtlink_t*)0)) : 0);
	if(view)
	{	((view->data->type&010000) ? dtrestore(view,((Dtlink_t*)0)) : 0);
		if(view->meth != dt->meth) /* must use the same method */
			return ((Dt_t*)0);
	}
	/* make sure there won't be a cycle */
	for(d = view; d; d = d->view)
		if(d == dt)
			return ((Dt_t*)0);
	/* no more viewing lower dictionary */
	if((d = dt->view) )
		d->nview -= 1;
	dt->view = dt->walk = ((Dt_t*)0);
	if(!view)
	{	dt->searchf = dt->meth->searchf;
		return d;
	}
	/* ok */
	dt->view = view;
	dt->searchf = dtvsearch;
	view->nview += 1;
	return view;
}

