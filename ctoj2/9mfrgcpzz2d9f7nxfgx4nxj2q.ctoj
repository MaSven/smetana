@TranslatedBy("plantuml")
public static Dict_t textfont_dict_open(GVC_t gvc) {
    gvc.textfont_disc.key = null;
    gvc.textfont_disc.size = sizeof(textfont_t.class);
    gvc.textfont_disc.link = new OFFSET(null, "-1");
    gvc.textfont_disc.makef = new Dtmake_f(){
		public StarVoid function(Dict_t arg1, StarVoid arg2, Dtdisc_t arg3) {
			return textfont_makef(arg1, arg2, arg3);
		}};  
    gvc.textfont_disc.freef = new Dtfree_f(){
		public void function(Dict_t arg1, StarVoid arg2, Dtdisc_t arg3) {
			textfont_freef(arg1, arg2, arg3);
		}};
    gvc.textfont_disc.comparf = new Dtcompar_f(){
		public int function(Dict_t arg1, StarVoid arg2, StarVoid arg3, Dtdisc_t arg4) {
			return textfont_comparf(arg1, arg2, arg3, arg4);
		}};
    gvc.textfont_disc.hashf = null;
    gvc.textfont_disc.memoryf = null;
    gvc.textfont_disc.eventf = null;
    gvc.textfont_dt = dtopen(gvc.textfont_disc, Dtoset);
    return gvc.textfont_dt;
}
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Dt_t * textfont_dict_open(GVC_t *gvc)
{
    ( (&(gvc->textfont_disc))->key = (0), (&(gvc->textfont_disc))->size = (sizeof(textfont_t)), (&(gvc->textfont_disc))->link = (-1), (&(gvc->textfont_disc))->makef = (textfont_makef), (&(gvc->textfont_disc))->freef = (textfont_freef), (&(gvc->textfont_disc))->comparf = (textfont_comparf), (&(gvc->textfont_disc))->hashf = (NULL), (&(gvc->textfont_disc))->memoryf = (NULL), (&(gvc->textfont_disc))->eventf = (NULL) );
    gvc->textfont_dt = dtopen(&(gvc->textfont_disc), Dtoset);
    return gvc->textfont_dt;
}

